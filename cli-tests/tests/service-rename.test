# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2014 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## service rename

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

# # ## ### ##### ######## ############# #####################

test service-rename-1.0 {service rename, wrong args, too many} -setup {
    stage-open
} -body {
    run rename-service S NS X
} -cleanup {
    stage-close
} -returnCodes error -match glob -result "wrong#args, too many*"

test service-rename-1.1 {service rename, wrong args, not enough} -constraints cfv2 -setup {
    stage-open
    ref-target
    go-admin
} -body {
    run rename-service -n
} -cleanup {
    stage-close
} -returnCodes error -match glob -result "wrong#args, not enough*"

test service-rename-1.2 {service rename, wrong args, not enough} -constraints cfv2 -setup {
    stage-open
    ref-target
    go-admin
    run create-service -n --plan free mysql testservice
} -body {
    run rename-service -n testservice
} -cleanup {
    run delete-service -n testservice
    stage-close
} -returnCodes error -result {Missing definition for argument 'name'}

test service-rename-1.3 {service requires CFv2 API} -constraints cfv1 -setup {
    stage-open
    ref-target
    go-admin
} -body {
    run rename-service -n S NS
} -cleanup {
    stage-close
} -returnCodes error -result {Error: This command requires a target exporting the CF v2 API}

test service-rename-1.4 {service rename, not logged in} -constraints cfv2 -setup {
    stage-open
    ref-target
} -body {
    run rename-service testservice testservice2
} -cleanup {
    stage-close
} -returnCodes error -result [login-required]

test service-rename-1.5 {service rename, non-admin login ok} -constraints cfv2 -setup {
    stage-open
    ref-target
    go-admin
    run create-service -n --plan free mysql testservice
    go-non-admin
} -body {
    run rename-service -n testservice testservice2
} -cleanup {
    go-admin
    run delete-service -n testservice2
    remove-non-admin
    stage-close
} -result {Renaming service [testservice] to testservice2 ... OK}

test service-rename-1.6 {service rename, unknown source service} -constraints cfv2 -setup {
    stage-open
    go-admin
} -body {
    run rename-service -n testservice testservice2
} -cleanup {
    stage-close
} -returnCodes error -result [unexpected input service {service instance} testservice " in space '[thespace]'"]

test service-rename-1.7 {service rename, duplicate destination service} -constraints cfv2 -setup {
    stage-open
    go-admin
    run create-service -n --plan free mysql testservice
    run create-service -n --plan free mysql testservice2
} -body {
    run rename-service -n testservice testservice2
} -cleanup {
    run delete-service -n testservice2
    run delete-service -n testservice
    stage-close
} -returnCodes error -result [already input name {service instance} testservice2]

test service-rename-1.8 {service rename} -constraints cfv2 -setup {
    stage-open
    go-admin
    run create-service -n --plan free mysql testservice
} -body {
    run rename-service -n testservice testservice2
} -cleanup {
    run delete-service -n testservice2
    stage-close
} -result {Renaming service [testservice] to testservice2 ... OK}

test service-rename-1.9 {service rename, persists} -constraints cfv2 -setup {
    stage-open
    go-admin
    run create-service -n --plan free mysql testservice
} -body {
    run rename-service -n testservice testservice2
    run service testservice2
} -cleanup {
    run delete-service -n testservice2
    stage-close
} -match glob -result *

# # ## ### ##### ######## ############# #####################
cleanupTests
