# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2014 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## security-group

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

# # ## ### ##### ######## ############# #####################

test security-group-1.0.1 {security-group, wrong args, not enough} -setup {
    stage-open
    ref-target
    go-admin
} -body {
    run security-group -n
} -cleanup {
    stage-close
} -returnCodes error -match glob -result "wrong#args, not enough*"

test security-group-1.0.2 {security-group, wrong args, too many} -setup {
    stage-open
    ref-target
    go-admin
} -body {
    run security-group S X
} -cleanup {
    remove-appdir
    stage-close
} -returnCodes error -match glob -result "wrong#args, too many*"

test security-group-1.1.0 {security-group, login required} -setup {
    stage-open
    ref-target
} -body {
    run security-group [thesecgroup]
} -cleanup {
    stage-close
} -returnCodes error -result [login-required]

test security-group-1.1.1 {security-group, non-admin login is not ok} -constraints s342ge -setup {
    stage-open
    go-admin
    run create-security-group [thesecgroup] [tmp]/data/sg/0-rules.json
    go-non-admin
} -body {
    run security-group [thesecgroup]
} -cleanup {
    be-admin
    run delete-security-group -n [thesecgroup]
    remove-non-admin
    stage-close
} -returnCodes error -result [unexpected input security_group security_group [thesecgroup]]
# Instead of a [not-authorized] return the sgroups are simply hidden from the user.

# # ## ### ##### ######## ############# #####################

test security-group-1.3 {security-group, unknown security-group} -constraints s342ge -setup {
    stage-open
    go-admin
} -body {
    run security-group [thesecgroup]
} -cleanup {
    stage-close
} -returnCodes error -result [unexpected input security_group security_group [thesecgroup]]

test security-group-1.4.0 {security-group, table} -constraints s342ge -setup {
    stage-open
    go-admin
    run create-security-group [thesecgroup] [tmp]/data/sg/1-rules.json
} -body {
    run security-group [thesecgroup]
} -cleanup {
    run delete-security-group -n [thesecgroup]
    stage-close
} -match glob -result [map [viewFile data/sg/show.txt] \
			   @ta@ [thetarget] \
			   @sg@ [thesecgroup]]

test security-group-1.4.1 {security-group, --json} -constraints s342ge -setup {
    stage-open
    go-admin
    run create-security-group [thesecgroup] [tmp]/data/sg/1-rules.json
} -body {
    run security-group [thesecgroup] --json
} -cleanup {
    run delete-security-group -n [thesecgroup]
    stage-close
} -match glob -result [map [viewFile data/sg/show.json] \
			   @ta@ [thetarget] \
			   @sg@ [thesecgroup]]




test security-group-1.5.0 {security-group, staging} -constraints s342ge -setup {
    stage-open
    go-admin
    run create-security-group [thesecgroup] [tmp]/data/sg/1-rules.json
    run bind-security-group [thesecgroup] --staging
} -body {
    run security-group [thesecgroup]
} -cleanup {
    run delete-security-group -n [thesecgroup]
    stage-close
} -match glob -result [map [viewFile data/sg/show-staging.txt] \
			   @ta@ [thetarget] \
			   @sg@ [thesecgroup]]

test security-group-1.5.1 {security-group, running} -constraints s342ge -setup {
    stage-open
    go-admin
    run create-security-group [thesecgroup] [tmp]/data/sg/1-rules.json
    run bind-security-group [thesecgroup] --running
} -body {
    run security-group [thesecgroup]
} -cleanup {
    run delete-security-group -n [thesecgroup]
    stage-close
} -match glob -result [map [viewFile data/sg/show-running.txt] \
			   @ta@ [thetarget] \
			   @sg@ [thesecgroup]]


test security-group-1.5.2 {security-group, space} -constraints s342ge -setup {
    stage-open
    go-admin
    run create-security-group [thesecgroup] [tmp]/data/sg/1-rules.json
    run bind-security-group [thesecgroup] --org [theorg] --space [thespace]
} -body {
    run security-group [thesecgroup]
} -cleanup {
    run delete-security-group -n [thesecgroup]
    stage-close
} -match glob -result [map [viewFile data/sg/show-space.txt] \
			   @or@ [theorg] \
			   @sp@ [thespace] \
			   @ta@ [thetarget] \
			   @sg@ [thesecgroup]]


# # ## ### ##### ######## ############# #####################
cleanupTests
