# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2013 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## app (single application, info)

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

# # ## ### ##### ######## ############# #####################

test app-1.0 {app, wrong args, too many} -setup {
    stage-open
} -body {
    run app A X
} -cleanup {
    stage-close
} -returnCodes error -match glob -result "wrong#args, too many*"

test app-1.1 {app, empty application} -setup {
    stage-open
    go-admin
} -body {
    indir [appdir] { run app -n }
} -cleanup {
    remove-appdir
    stage-close
} -returnCodes error -result [expected-app appdir app]

# # ## ### ##### ######## ############# #####################
## Note: Ignoring the 'log' output as it is timing sensitive and may
## not contain everything needed to match because of that.

test app-1.2 {app, auto-select app} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    make-test-app node-env $appdir
} -body {
    indir $appdir { run app -n }
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result {Using manifest file "stackato.yml"
*node-env
+--------------+-*-+
| Key          | Value *|
+--------------+-*-+
| State        | STOPPED *|
| Uris         | node-env.* |
| Health       | STOPPED *|
| Instances    | 1 *|
| Memory       | 256.0M *|
| Disk Quota   | 2.0G *|
| Services     | * |
| Environment: | * |
+--------------+-*-+}

test app-1.3 {app, explicit app} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    after 40000 ; # wait some for push to settle
} -body {
    run app -n node-env
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result {*node-env
+--------------+-*-+
| Key          | Value *|
+--------------+-*-+
| State        | STARTED *|
| Uris         | node-env.* |
| Health       | RUNNING *|
| Instances    | 1 *|
| Memory       | 256.0M*|
| Disk Quota   | 2.0G *|
| Services     | * |
| Environment: | * |
+--------------+-*-+}

test app-1.4.1 {app, json} -constraints cfv1 -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    after 40000 ; # wait some for push to settle
} -body {
    indir $appdir { run app -n --json }
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result {{
    "env"              : \[\],*
    "instances"        : "1",
    "meta"             : {
        "console" : "null",
        "created" : "*",
        "debug"   : "null",
        "version" : "*"
    },
    "name"             : "node-env",
    "resources"        : {
        "disk"   : "*",
        "fds"    : "*",
        "memory" : "*",
        "sudo"   : "*"
    },
    "runningInstances" : "1",
    "services"         : \[\],
    "staging"          : {
        "model" : "*",
        "stack" : "*"
    },
    "state"            : "STARTED",
    "uris"             : \["node-env.*"\],
    "version"          : "*"
}}

test app-1.4.2 {app, json} -constraints cfv2 -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    after 40000 ; # wait some for push to settle
} -body {
    indir $appdir { run app -n --json }
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result {{
    "entity"   : {
        "buildpack"            : null,
        "command"              : "node app.js",
        "console"              : *,
        "debug"                : null,
        "detected_buildpack"   : "Node.js",
        "disk_quota"           : *,
        "environment_json"     : {},
        "events"               : \[\],
        "events_url"           : "/v2/apps/*/events",
        "guid"                 : "*",
        "instances"            : 1,
        "memory"               : *,
        "name"                 : "node-env",
        "production"           : "false",
        "routes"               : \[*\],
        "routes_url"           : "/v2/apps/*/routes",
        "service_bindings"     : \[\],
        "service_bindings_url" : "/v2/apps/*/service_bindings",
        "space"                : *,
        "space_guid"           : "*",
        "space_url"            : "/v2/spaces/*",
        "stack"                : *,
        "stack_guid"           : "*",
        "stack_url"            : "/v2/stacks/*",
        "staging_task_id"      : "*",
        "state"                : "STARTED",
        "version"              : "*"
    },
    "metadata" : {
        "created_at" : "*",
        "guid"       : "*",
        "updated_at" : *,
        "url"        : "/v2/apps/*"
    }
}}

# # ## ### ##### ######## ############# #####################
cleanupTests
