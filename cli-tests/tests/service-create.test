# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
# # ## ### ##### ######## ############# #####################

## Copyright (c) 2013 ActiveState Software Inc.
## See file doc/license.txt for the license terms.

# # ## ### ##### ######## ############# #####################
## services, create

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

# # ## ### ##### ######## ############# #####################

test create-service-1.0 {create-service, wrong args, too many} -setup {
    stage-open
} -body {
    run create-service V N A X
} -cleanup {
    stage-close
} -returnCodes error -match glob -result "wrong#args, too many*"

test create-service-1.1 {create-service} -setup {
    stage-open
    go-admin
} -body {
    run create-service -n
} -cleanup {
    stage-close
} -returnCodes error -result {Error: Need a valid service type}

test create-service-1.2 {create-service, login required} -setup {
    stage-open
    ref-target
} -body {
    run create-service -n V N
} -cleanup {
    stage-close
} -returnCodes error -result [login-required]

test create-service-1.3 {create-service, bogus service} -setup {
    stage-open
    go-admin
    go-non-admin
} -body {
    run create-service -n bogus
} -cleanup {
    be-admin
    remove-non-admin
    stage-close
} -returnCodes error -result {[bogus] is not a valid service choice}

set counter 0
foreach vendor [services] {
    test create-service-2.$counter "create-service, $vendor, explicit name" -setup {
	stage-open
	go-admin
	go-non-admin
    } -body {
	run create-service $vendor test-service
    } -cleanup {
	run delete-service test-service
	be-admin
	remove-non-admin
	stage-close
    } -result {Creating new service ... OK}

    test create-service-3.$counter "create-service, $vendor, automatic name" -setup {
	stage-open
	go-admin
	go-non-admin
    } -body {
	run create-service $vendor
	regexp {\[([^]]*)\]} $stdout -> thename
	set stdout
    } -cleanup {
	catch { run delete-service $thename }
	be-admin
	remove-non-admin
	stage-close
    } -match glob -result {Creating new service * ... OK}

    incr counter
}

# todo: auto-binding to existing application
# todo: service creation in groups
# todo: dup service names

# # ## ### ##### ######## ############# #####################
cleanupTests
