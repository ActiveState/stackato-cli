# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2013 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## group management, group querying (listing)

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

# # ## ### ##### ######## ############# #####################

test groups-show-1.0 {groups show, wrong args, too many} -setup {
    stage-open
} -body {
    run groups show X
} -cleanup {
    stage-close
} -returnCodes error -match glob -result "wrong#args, too many*"

test groups-show-1.1 {groups show, login required} -setup {
    stage-open
    ref-target
} -body {
    run groups show
} -cleanup {
    stage-close
} -returnCodes error -result {Login Required
Please use 'stackato login'}

test groups-show-1.2 {groups show, non-admin login ok} -constraints cfv2uaa -setup {
    stage-open
    go-admin
    go-non-admin
} -body {
    run groups show
} -cleanup {
    be-admin
    remove-non-admin
    stage-close
} -match glob -result *

test groups-show-1.3 {groups show, nothing} -setup {
    stage-open
    go-admin
} -body {
    run groups show
} -cleanup {
    stage-close
} -result {No Groups}

test groups-show-1.4 {groups show, nothing, json} -setup {
    stage-open
    go-admin
} -body {
    run groups show --json
} -cleanup {
    stage-close
} -result {{}}

test groups-show-1.5 {groups show, with groups} -setup {
    stage-open
    go-admin
    run groups create test-group
} -body {
    run groups show
} -cleanup {
    run groups delete test-group
    stage-close
} -match glob -result "+-*-+-*-+\n| Group *| Members *|\n+-*-+-*-+\n| test-group *|*|\n+-*-+-*-+"

test groups-show-1.6 {groups show, with groups, json} -setup {
    stage-open
    go-admin
    run groups create test-group
} -body {
    run groups show --json
} -cleanup {
    run groups delete test-group
    stage-close
} -result {{
    "test-group" : []
}}

test groups-show-1.7 {groups show, with groups and members} -setup {
    stage-open
    go-admin
    run add-user        grouper@test --passwd hush
    run groups create   test-group
    run groups add-user test-group grouper@test
} -body {
    run groups show
} -cleanup {
    run groups delete-user test-group grouper@test
    run groups delete      test-group
    run delete-user        grouper@test
    stage-close
} -match glob -result "+-*-+-*-+\n| Group *| Members *|\n+-*-+-*-+\n| test-group *| grouper@test *|\n+-*-+-*-+"

test groups-show-1.8 {groups show, with groups and members, json} -setup {
    stage-open
    go-admin
    run add-user        grouper@test --passwd hush
    run groups create   test-group
    run groups add-user test-group grouper@test
} -body {
    run groups show --json
} -cleanup {
    run groups delete-user test-group grouper@test
    run groups delete      test-group
    run delete-user        grouper@test
    stage-close
} -result {{
    "test-group" : ["grouper@test"]
}}

# # ## ### ##### ######## ############# #####################
## And everything a second time, demonstrating that 'show' is the
## default sub-command for 'groups'.

test groups-show-2.1 {groups show is default, login required} -setup {
    stage-open
    ref-target
} -body {
    run groups
} -cleanup {
    stage-close
} -returnCodes error -result {Login Required
Please use 'stackato login'}

test groups-show-2.2 {groups show is default, nothing} -setup {
    stage-open
    go-admin
} -body {
    run groups
} -cleanup {
    stage-close
} -result {No Groups}

test groups-show-2.3 {groups show is default, nothing, json} -setup {
    stage-open
    go-admin
} -body {
    run groups --json
} -cleanup {
    stage-close
} -result {{}}

test groups-show-2.4 {groups show is default, with groups} -setup {
    stage-open
    go-admin
    run groups create test-group
} -body {
    run groups
} -cleanup {
    run groups delete test-group
    stage-close
} -match glob -result "+-*-+-*-+\n| Group *| Members *|\n+-*-+-*-+\n| test-group *|*|\n+-*-+-*-+"

test groups-show-2.5 {groups show is default, with groups, json} -setup {
    stage-open
    go-admin
    run groups create test-group
} -body {
    run groups --json
} -cleanup {
    run groups delete test-group
    stage-close
} -result {{
    "test-group" : []
}}

test groups-show-2.6 {groups show is default, with groups and members} -setup {
    stage-open
    go-admin
    run add-user        grouper@test --passwd hush
    run groups create   test-group
    run groups add-user test-group grouper@test
} -body {
    run groups
} -cleanup {
    run groups delete-user test-group grouper@test
    run groups delete      test-group
    run delete-user        grouper@test
    stage-close
} -match glob -result "+-*-+-*-+\n| Group *| Members *|\n+-*-+-*-+\n| test-group *| grouper@test *|\n+-*-+-*-+"

test groups-show-2.7 {groups show is default, with groups and members, json} -setup {
    stage-open
    go-admin
    run add-user        grouper@test --passwd hush
    run groups create   test-group
    run groups add-user test-group grouper@test
} -body {
    run groups --json
} -cleanup {
    run groups delete-user test-group grouper@test
    run groups delete      test-group
    run delete-user        grouper@test
    stage-close
} -result {{
    "test-group" : ["grouper@test"]
}}

# # ## ### ##### ######## ############# #####################
cleanupTests
