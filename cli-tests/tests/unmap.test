# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2013 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## unmap

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

# # ## ### ##### ######## ############# #####################

test unmap-1.0 {unmap, wrong args, too many} -setup {
    stage-open
    go-admin
} -body {
    run unmap A I X
} -cleanup {
    stage-close
} -returnCodes error -match glob -result "wrong#args, too many*"

test unmap-1.1 {unmap, wrong args, not enough} -setup {
    stage-open
    go-admin
} -body {
    indir [appdir] { run unmap -n }
} -cleanup {
    remove-appdir
    stage-close
} -returnCodes error -match glob -result "wrong#args, not enough*"

test unmap-1.2 {unmap, no application} -setup {
    stage-open
    go-admin
} -body {
    indir [appdir] { run unmap -n URL }
} -cleanup {
    remove-appdir
    stage-close
} -returnCodes error -result \
    [per-api \
	 {Error: The application [appdir] is not deployed. Please deploy it, or choose a different application to unmap.} \
	 [unexpected input application application appdir " in space '[theorg]::[thespace]'"]]

test unmap-1.3 {map, bogus url, not mapped} -setup {
    stage-open
    go-admin
    make-test-app
} -body {
    indir [appdir] { run unmap TEST bogus }
} -cleanup {
    remove-test-app
    remove-appdir
    stage-close
} -returnCodes error -result \
    [per-api \
	 {Error: Invalid url bogus} \
	 [unexpected input url route bogus " for application 'TEST'"]]

test unmap-1.4 {unmap, non-admin login is ok} -setup {
    stage-open
    go-admin
    go-non-admin
    make-test-app
    run map TEST [mapurl]
} -body {
    run unmap TEST [mapurl]
} -cleanup {
    remove-test-app
    if {$isv2 } {
	run delete-route -n [mapurl]
    }
    be-admin
    remove-non-admin
    remove-appdir
    stage-close
} -match glob -result *

# See also 1.7, 1.8 for users of the result files
test unmap-1.5 {unmap} -setup {
    stage-open
    go-admin
    make-test-app
    run map TEST [mapurl]
} -body {
    run unmap TEST [mapurl]
} -cleanup {
    remove-test-app
    if {$isv2 } {
	run delete-route -n [mapurl]
    }
    remove-appdir
    stage-close
} -result \
    [map [per-api \
	      [viewFile data/unmap1.5-cfv1.txt] \
	      [viewFile data/unmap1.5-cfv2.txt]] \
	 @url@ [mapurl] \
	 @app@ TEST]

# We cannot unmap an url from a stopped app. It reports ok (see 1.5),
# but does not actually remove it, see here.
test unmap-1.6 {unmap, persistent} -constraints known-issue -setup {
    stage-open
    go-admin
    make-test-app
    run map TEST [mapurl]
    run unmap TEST [mapurl]
    run apps
} -cleanup {
    remove-test-app
    if {$isv2 } {
	run delete-route -n [mapurl]
    }
    remove-appdir
    stage-close
} -match glob -result "*| TEST *| * | STOPPED *|  *| * |*"

test unmap-1.7 {unmap, running app, no! restart} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n --no-start }
    run map node-env [mapurl]
    run start node-env
} -body {
    run unmap node-env [mapurl]
} -cleanup {
    remove-test-app node-env
    if {$isv2 } {
	run delete-route -n [mapurl]
    }
    remove-appdir
    stage-close
} -result \
    [map [per-api \
	      [viewFile data/unmap1.5-cfv1.txt] \
	      [viewFile data/unmap1.5-cfv2.txt]] \
	 @url@ [mapurl] \
	 @app@ node-env]

test unmap-1.8 {unmap, deployed stopped app, no restart} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n --no-start }
    run map node-env [mapurl]
} -body {
    run unmap node-env [mapurl]
} -cleanup {
    remove-test-app node-env
    if {$isv2 } {
	run delete-route -n [mapurl]
    }
    remove-appdir
    stage-close
} -result \
    [map [per-api \
	      [viewFile data/unmap1.5-cfv1.txt] \
	      [viewFile data/unmap1.5-cfv2.txt]] \
	 @url@ [mapurl] \
	 @app@ node-env]

# # ## ### ##### ######## ############# #####################
cleanupTests
