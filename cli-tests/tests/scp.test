# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2013 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## scp

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

# # ## ### ##### ######## ############# #####################

test scp-1.0 {scp, no app} -setup {
    stage-open
    go-admin
} -body {
    run scp -n X
} -cleanup {
    stage-close
} -returnCodes error -result \
    [per-api \
	 [unexpected option --application application tests] \
	 [unexpected option --application application tests " in space '[theorg]::[thespace]'"]]
# -match glob -result [no-application-q scp]

test scp-1.1 {scp, empty application} -setup {
    stage-open
    go-admin
} -body {
    indir [appdir] { run scp -n }
} -cleanup {
    remove-appdir
    stage-close
} -returnCodes error -match glob -result "wrong#args, not enough*"

# # ## ### ##### ######## ############# #####################
## Note: Ignoring the 'log' output as it is timing sensitive and may
## not contain everything needed to match because of that.

test scp-1.2 {scp, auto-select app} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
} -body {
    indir $appdir { run scp :README.md [thehome]/View }
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result {}

test scp-1.3 {scp, explicit app} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
} -body {
    run scp -a node-env :README.md [thehome]/View
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result {}

test scp-1.4 {scp, retrieve file} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
} -body {
    run scp -a node-env :README.md [thehome]/View
    tcltest::viewFile [thehome]/View
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result [viewFile data/scp14.txt]

TODO scp --target, --group, multiple dependent apps.

# # ## ### ##### ######## ############# #####################
## Test all possible combinations of single/multiple
## files/directories remote/local src/dst upload/download.

# (0) Bad mix of remote/local paths in the source-part.

test scp-2.0 {scp, mixed remote/local source paths not allowed} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
} -body {
    run scp -a node-env :foo foo dst
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -returnCodes error -result {Illegal mix of local and remote source paths}

# (1) local <-- remote
# (1.1) any dst, missing source(s) - error
# (1.2) dst file, multiple sources - error (tests globbing as well)
# (1.3) no dst, multiple sources - error
# (1.4) missing   file from file
# (1.5) overwrite file from file
# (1.6) directory from file
# (1.7) directory from file, overwrite existing
# (1.8) missing directory, from directory

test scp-2.1.1 {scp, local <-- remote, any dst, missing source} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
} -body {
    run scp -a node-env :foo dst
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -returnCodes error -result {foo: No such file or directory}

test scp-2.1.2 {scp, local <-- remote, dst file, multiple sources, glob} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
} -body {
    run scp -a node-env {:[ap]*} [touch dst]
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -returnCodes error -match glob -result {copying multiple files, but last argument `*/dst' is not a directory}

test scp-2.1.3 {scp, local <-- remote, no dst, multiple sources, glob} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
} -body {
    run scp -a node-env {:[ap]*} dst
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -returnCodes error -result {`dst': specified destination directory does not exist}

test scp-2.1.4 {scp, local <-- remote, missing file from file} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
} -body {
    lappend r [file exists [thehome]/dst]
    run scp -a node-env {:app.js} [thehome]/dst
    lappend r [file size [thehome]/dst]
} -cleanup {
    unset r
    unset appdir
    remove-test-app node-env
    stage-close
} -result {0 778}

test scp-2.1.5 {scp, local <-- remote, overwrite file from file} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    set dst [touch dst]
} -body {
    lappend r [file size $dst]
    run scp -a node-env {:app.js} $dst
    lappend r [file size $dst]
} -cleanup {
    unset r
    unset appdir
    remove-test-app node-env
    stage-close
} -result {0 778}

test scp-2.1.6 {scp, local <-- remote, directory from file} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    set dst [touchdir dst]
} -body {
    lappend r [file exists $dst/app.js]
    run scp -a node-env {:app.js} $dst
    lappend r [file size $dst/app.js]
} -cleanup {
    unset r
    unset appdir
    remove-test-app node-env
    stage-close
} -result {0 778}

test scp-2.1.7 {scp, local <-- remote, directory from file, overwrite existing} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    set dst [touchdir dst]
    set ajs [touch dst/app.js]
} -body {
    lappend r [file size $ajs]
    run scp -a node-env {:app.js} $dst
    lappend r [file size $ajs]
} -cleanup {
    unset r
    unset appdir
    remove-test-app node-env
    stage-close
} -result {0 778}

test scp-2.1.8 {scp, local <-- remote, directory from directory} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    set dst [touchdir dst]
} -body {
    run scp -a node-env : $dst
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -result {}

# # ## ### ##### ######## ############# #####################
cleanupTests
