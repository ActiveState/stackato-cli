# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2013 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## crashlogs - Currently only testing for 2.7+ server, i.e. logyard.

kt check Tcl     8.5
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt source support/common.tcl

set logtext {*T* stackato?cloud_controller_ng?: Created app 'node-env'
*T* stackato?cloud_controller_ng?: Queued deployment of app 'node-env'
*T* stackato?dea_ng?: Staging application
*T* stackato?cloud_controller_ng?: Updated app 'node-env' -- {"console"=>true, "state"=>"STARTED"}
*T* staging: -----> Downloaded app package *
*T* staging: -----> Resolving engine versions
*T* staging: 
*T* staging:        WARNING: No version of Node.js specified in package.json, see:
*T* staging:        https://devcenter.heroku.com/articles/nodejs-versions
*T* staging: 
*T* staging:        Using Node.js version: 0.10.21
*T* staging:        Using npm version: 1.2.30
*T* staging: -----> Fetching Node.js binaries
*T* staging: -----> Vendoring node into slug
*T* staging: -----> Installing dependencies with npm
*T* staging:        npm WARN package.json node-env@0.0.1 No repository field.
*T* staging:        npm WARN package.json node-env@0.0.1 No repository field.
*T* staging:        Dependencies installed
*T* staging: -----> Building runtime environment
*T* staging: -----> Uploading droplet *
*T* stackato?dea_ng?: Completed staging application
*T* stackato?dea_ng.0?: Spawning app web process: node app.js
*T* app?stdout.0?: Server running at *}

# # ## ### ##### ######## ############# #####################

test crashlogs-1.0 {crashlogs, wrong args, too many} -setup {
    stage-open
    go-admin
} -body {
    run crashlogs A X
} -cleanup {
    stage-close
} -returnCodes error -match glob -result "wrong#args, too many*"

test crashlogs-1.1 {crashlogs, empty application} -setup {
    stage-open
    go-admin
} -body {
    indir [appdir] { run crashlogs -n }
} -cleanup {
    remove-appdir
    stage-close
} -returnCodes error -result [expected-app appdir crashlogs]

# # ## ### ##### ######## ############# #####################
## Note: Ignoring the 'log' output as it is timing sensitive and may
## not contain everything needed to match because of that.

test crashlogs-1.2 {crashlogs, auto-select app} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    after 40000 ; # wait some for push to settle
} -body {
    indir $appdir { run crashlogs }
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result $logtext

test crashlogs-1.3 {crashlogs, explicit app} -setup {
    stage-open
    go-admin
    set appdir [example a.original.node-env]
    indir $appdir { run push -n }
    after 40000 ; # wait some for push to settle
} -body {
    run crashlogs node-env
} -cleanup {
    unset appdir
    remove-test-app node-env
    stage-close
} -match glob -result $logtext

# todo --target, --group, multiple dependent apps.

# # ## ### ##### ######## ############# #####################
cleanupTests
